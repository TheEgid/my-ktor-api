worker_processes auto;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    aio on;
    tcp_nopush on;
    sendfile on;

    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=50r/s;

    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    upstream my_server_server {
        server my_server:8080;
    }

    server {
        listen 80;
        listen [::]:80;
        server_name localhost;

        add_header Strict-Transport-Security "max-age=31536000" always;
        tcp_nodelay on;
        client_max_body_size 11m;

        gzip on;
        gzip_types text/xml text/javascript application/json application/x-javascript
                    application/javascript application/x-font-ttf application/ttf
                    image/x-icon text/plain text/css;
        gzip_disable "msie6";

        location /api/ {
            proxy_pass http://my_server_server;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Убрать try_files для чистого API-бэкенда
            # Или оставить только если точно нужно:
            # try_files $uri @backend;

            add_header "Access-Control-Allow-Origin" *;

            if ($request_method = OPTIONS) {
                add_header "Access-Control-Allow-Origin" *;
                add_header "Access-Control-Allow-Methods" "GET, POST, PUT, OPTIONS, HEAD";
                add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                return 204;
            }
        }

        location /health {
            access_log off;
            return 200 "nginx is healthy\n";
        }

        location ~* \.php$ {
            return 404;
        }

        location ~* \.env$ {
            return 404;
        }
    }
}
